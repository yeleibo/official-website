name: 打包并上传docker镜像
# action触发条件
on:
  push:
    branches:
      - main  # 触发条件：每次推送到 main 分支时
  pull_request:
    branches:
      - main  # 触发条件：每次 PR 合并到 main 分支时
# action执行的环境变量
env:
  # docker镜像仓库地址
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    # 给操作相关权限
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Record start time
        run: echo "START_TIME=$(date +%s)" >> $GITHUB_ENV
      - name: Image Name
        run: echo "镜像名称：%s" >> $env.IMAGE_NAME
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}


  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push

    steps:
      - name: SSH into server and deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER_NAME }}
          password: ${{ secrets.SSH_USER_PW }}
          port: 22
          script: |
            cd /root/docker-compose
            docker-compose pull
            docker-compose up -d

      - name: Store the commit message
        run: echo "COMMIT_MESSAGE=${{ github.event.commits[0].message }}" >> $GITHUB_ENV
        continue-on-error: true 
        
      - name: Send message to DingTalk
        uses: zcong1993/actions-ding@v4.0.0
        with:
          dingToken: ${{secrets.DingDingBotToken }}
          # https://open.dingtalk.com/document/orgapp/group-messaging-apis-for-interactive-service-windows
          body: |
            {
              "msgtype": "markdown",
              "markdown": {
                  "text": "# 官方网站有更新-测试环境\n\n * [http://code.test.x-gis.com](http://code.test.x-gis.com)\n\n * commit message: ${{ env.COMMIT_MESSAGE }}",
                  "title": "GithubAction:项目打包成功"
              }
            }  